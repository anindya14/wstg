name: Markdown Lint Check

on:
  pull_request_target:
    branches:
    - master
    paths:
    - '**.md'
    - '!www/**'
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{github.event.pull_request.head.ref}}
        repository: ${{github.event.pull_request.head.repo.full_name}}
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Install dependencies
      run: npm install -g markdownlint-cli
    - name: Run linter
      run: markdownlint . --ignore node_modules --ignore www &> lint.txt
    - name: Show Linting Issues
      id: lint
      if: failure()
      run: |
        cat lint.txt
        sed -i 's/```/triple-backtick/g' lint.txt
        ISSUES=$(cat lint.txt)
        ISSUES="${ISSUES//'%'/'%25'}"
        ISSUES="${ISSUES//$'\n'/'%0A'}"
        ISSUES="${ISSUES//$'\r'/'%0D'}"
        echo ::set-output name=ISSUES::**The following issues were identified:** %0A$ISSUES
    - name: Attach Linting Issues
      if: failure()
      uses: actions/upload-artifact@v1
      with:
        name: Linting Issues
        path: lint.txt
    - name: Comment Linting Issues
      if: failure()
      uses: actions/github-script@v2
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.createComment({
            issue_number: ${{ github.event.number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `${{ steps.lint.outputs.ISSUES }}`
          })

